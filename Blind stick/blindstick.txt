// defines pins numbers
const int trigPin = 9;
const int echoPin = 10;
const int buzzer = 11;
const int ledPin = 13;
const int trigPin1 = 8;
const int echoPin1 =A0;
// defines variables
long duration;
int distance;
int safetyDistance;
int depthDistance;
int depthsafety;
long depthduration;
void setup() {
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin, INPUT); // Sets the echoPin as an Input
pinMode(echoPin1,INPUT);
pinMode(buzzer, OUTPUT);
pinMode(ledPin, OUTPUT);
pinMode(trigPin1,OUTPUT);
Serial.begin(9600); // Starts the serial communication
}


void loop() {
// Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin,LOW);
digitalWrite(trigPin1, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin1, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin1,LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
//depthduration = pulseIn(echoPin1,HIGH);
depthduration = analogRead(echoPin1);

//depthsafety = map(depthduration, 0, 1023, 0, 255);
// Calculating the distance
distance= duration*0.034/2;
//depthDistance= depthduration*0.034/2;
safetyDistance = distance;
//depthsafety=depthDistance;
if (safetyDistance <= 15){
  digitalWrite(buzzer, HIGH);
  digitalWrite(ledPin, HIGH);
}
else{
  digitalWrite(buzzer, LOW);
  digitalWrite(ledPin, LOW);
}
if ( depthduration>=80){
 digitalWrite(buzzer,HIGH);
 digitalWrite(ledPin,HIGH);
}
else{
  digitalWrite(buzzer,LOW);
  digitalWrite(ledPin,LOW);
  }

// Prints the distance on the Serial Monitor
Serial.print("Distance: ");
Serial.println(distance);
Serial.println("Depthdistance");
Serial.println(depthduration);
delay(500);
}